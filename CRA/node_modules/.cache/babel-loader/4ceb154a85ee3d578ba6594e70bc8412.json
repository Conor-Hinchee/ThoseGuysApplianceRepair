{"ast":null,"code":"var _jsxFileName = \"/home/moarwaffe/Dev/thoseguysappliancerepair/ThoseGuysApplianceRepair/src/components/Home/Body/Contact/MessageModal/IssueDropDown/IssueDropDown.js\";\nimport React, { Component } from 'react';\nimport classes from './IssueDropDown.module.css';\nimport { ModalBody, ButtonDropdown, DropdownToggle, DropdownMenu } from 'reactstrap';\nimport IssueItem from './IssueItem/IssueItem';\n\nclass IssueDropDown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      fridgeIssues: [\"Displaying Error\", \"Dispenser Not Working\", \"Leaking\", \"Not Running\", \"Noise\", \"Odor\", \"Too Cold\", \"Too Warm\", \"Damaged Physically\", \"Not Sure\"],\n      washerIssues: [\"Displaying Error\", \"Display/Buttons Not Working\", \"Noise Vibration\", \"Not Filling\", \"Not Draining\", \"Not Running\", \"Stopped During Cycle\", \"Damaged Physically\", \"Not Sure\"],\n      dryerIssues: [\"Displaying Error\", \"Not Drying/Long Dry Times\", \"Display/Buttons Not Working\", \"Noise Vibration\", \"Not Heating\", \"Not Running\", \"Not Starting\", \"Stopped During Cycle\", \"Damaged Physically\", \"Not Sure\"],\n      dishwasherIssues: [\"Displaying Error\", \"Leaking\", \"Noise/Vibrations\", \"Not Cleaning Dishes\", \"Not Draining\", \"Not Drying Dishes\", \"Not Starting\", \"Stopped During Cycle\", \"Damaged Physically\", \"Not Sure\"],\n      rangeIssues: [\"Displaying Error\", \"Cooktop/Burners Not Working(Oven OK)\", \"Display Not Working\", \"Unable to Close/Open Door\", \"No Heat\", \"Noise\", \"Oven Not Working(Cooktop/Burners OK)\", \"Oven Temperature Problem\", \"Damaged Physically\", \"Not Sure\"],\n      ovenIssues: [\"Displaying Error\", \"Display Not Working\", \"Unable to Close/Open Door\", \"No Heat\", \"Temperature Problem\", \"Damaged Physically\", \"Not Sure\"],\n      waterHeaterIssues: [\"Displaying Error\", \"Leaking\", \"No Hot Water\", \"Not Enough Hot Water\", \"Too Hot\", \"Low Pressure\", \"Noise\", \"Water Odor/Color\", \"Pilot Won't Light\", \"Pilot Won't Stay Lit\", \"Burner Won't Stay Lit\", \"Damaged Physically\", \"Not Sure\"],\n      freezerIssues: [\"Noise\", \"Frost Build Up\", \"Not Running\", \"Not Cold\", \"Damaged Physically\", \"Not Sure\"],\n      cooktopIssues: [\"Displaying Error\", \"Scratched/Cracked\", \"Slow/Uneven Cooking\", \"Not Heating\", \"Damaged Physically\", \"Not Sure\"],\n      disposalIssues: [\"Not Working\", \"Jammed/Jamming\", \"Won't Shut Off\", \"Noise\", \"Damaged Physically\", \"Not Sure\"],\n      notlistedIssues: [\"Displaying Error\", \"Noise/Vibration\", \"Not Starting\", \"Will Not Shut Off\", \"Damaged Physically\", \"Not Sure\"]\n    };\n\n    this.toggleDropDown = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    };\n\n    this.issueItemClick = e => {\n      this.props.handleIssueOptionClick(e.currentTarget.id);\n    };\n\n    this.toggleDropDown = this.toggleDropDown.bind(this);\n    this.issueItemClick = this.issueItemClick.bind(this);\n  }\n\n  render() {\n    let issueList = [];\n    let titleCase = \"\";\n\n    if (this.props.applianceSelected === \"water_heater\") {\n      titleCase = \"Water Heater \";\n\n      for (let i = 0; i < this.state.waterHeaterIssues.length; i++) {\n        issueList.push(React.createElement(IssueItem, {\n          issue: this.state.waterHeaterIssues[i],\n          itemOnClick: this.issueItemClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }));\n      }\n    } else if (this.props.applianceSelected === \"not_listed\") {\n      titleCase = \"Appliance \";\n\n      for (let i = 0; i < this.state.notlistedIssues.length; i++) {\n        issueList.push(React.createElement(IssueItem, {\n          issue: this.state.notlistedIssues[i],\n          itemOnClick: this.issueItemClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }));\n      }\n    } else {\n      let type = this.props.applianceSelected + \"Issues\";\n      titleCase = this.props.applianceSelected.charAt(0).toUpperCase() + this.props.applianceSelected.slice(1) + \" \";\n\n      for (let i = 0; i < this.state[type].length; i++) {\n        issueList.push(React.createElement(IssueItem, {\n          issue: this.state[type][i],\n          itemOnClick: this.issueItemClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }));\n      }\n    }\n\n    return React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.FlexCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(ButtonDropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggleDropDown,\n      size: \"block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, titleCase, \"Issues\"), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, issueList))));\n  }\n\n}\n\nexport default IssueDropDown;","map":{"version":3,"sources":["/home/moarwaffe/Dev/thoseguysappliancerepair/ThoseGuysApplianceRepair/src/components/Home/Body/Contact/MessageModal/IssueDropDown/IssueDropDown.js"],"names":["React","Component","classes","ModalBody","ButtonDropdown","DropdownToggle","DropdownMenu","IssueItem","IssueDropDown","constructor","props","state","dropdownOpen","fridgeIssues","washerIssues","dryerIssues","dishwasherIssues","rangeIssues","ovenIssues","waterHeaterIssues","freezerIssues","cooktopIssues","disposalIssues","notlistedIssues","toggleDropDown","setState","prevState","issueItemClick","e","handleIssueOptionClick","currentTarget","id","bind","render","issueList","titleCase","applianceSelected","i","length","push","type","charAt","toUpperCase","slice","FlexCenter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './IssueDropDown.module.css';\nimport { ModalBody, ButtonDropdown, DropdownToggle, DropdownMenu} from 'reactstrap';\nimport IssueItem from './IssueItem/IssueItem';\n\nclass IssueDropDown extends Component {\n  constructor(props) {\n        super(props);\n        \n        this.toggleDropDown = this.toggleDropDown.bind(this);\n        this.issueItemClick = this.issueItemClick.bind(this);\n  }\n  \n  \n  state = {\n    dropdownOpen : false,\n    fridgeIssues : [\"Displaying Error\", \"Dispenser Not Working\", \"Leaking\", \"Not Running\", \"Noise\", \"Odor\",\n      \"Too Cold\", \"Too Warm\", \"Damaged Physically\", \"Not Sure\"],\n    washerIssues : [\"Displaying Error\", \"Display/Buttons Not Working\", \"Noise Vibration\", \"Not Filling\", \n      \"Not Draining\", \"Not Running\", \"Stopped During Cycle\", \"Damaged Physically\", \"Not Sure\"],\n    dryerIssues : [\"Displaying Error\", \"Not Drying/Long Dry Times\", \"Display/Buttons Not Working\",\n      \"Noise Vibration\", \"Not Heating\", \"Not Running\", \"Not Starting\", \"Stopped During Cycle\",\n      \"Damaged Physically\", \"Not Sure\"],\n    dishwasherIssues : [\"Displaying Error\", \"Leaking\", \"Noise/Vibrations\", \"Not Cleaning Dishes\",\n      \"Not Draining\", \"Not Drying Dishes\", \"Not Starting\", \"Stopped During Cycle\", \n      \"Damaged Physically\", \"Not Sure\"],\n    rangeIssues : [\"Displaying Error\", \"Cooktop/Burners Not Working(Oven OK)\", \"Display Not Working\", \n      \"Unable to Close/Open Door\", \"No Heat\", \"Noise\", \"Oven Not Working(Cooktop/Burners OK)\", \n      \"Oven Temperature Problem\", \"Damaged Physically\", \"Not Sure\"],\n    ovenIssues : [\"Displaying Error\", \"Display Not Working\", \"Unable to Close/Open Door\", \"No Heat\",\n      \"Temperature Problem\", \"Damaged Physically\", \"Not Sure\"],\n    waterHeaterIssues : [\"Displaying Error\", \"Leaking\", \"No Hot Water\", \"Not Enough Hot Water\",\n      \"Too Hot\", \"Low Pressure\", \"Noise\", \"Water Odor/Color\", \"Pilot Won't Light\", \"Pilot Won't Stay Lit\",\n      \"Burner Won't Stay Lit\", \"Damaged Physically\", \"Not Sure\"],\n    freezerIssues : [\"Noise\", \"Frost Build Up\", \"Not Running\", \"Not Cold\", \"Damaged Physically\", \"Not Sure\"],\n    cooktopIssues : [\"Displaying Error\", \"Scratched/Cracked\", \"Slow/Uneven Cooking\", \"Not Heating\", \n      \"Damaged Physically\", \"Not Sure\"],\n    disposalIssues : [\"Not Working\", \"Jammed/Jamming\", \"Won't Shut Off\", \"Noise\", \"Damaged Physically\", \"Not Sure\"],\n    notlistedIssues : [\"Displaying Error\", \"Noise/Vibration\", \"Not Starting\", \"Will Not Shut Off\", \n      \"Damaged Physically\", \"Not Sure\"],\n  };\n  \n  toggleDropDown = ()=>{\n    this.setState(prevState => ({\n            dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  \n  issueItemClick = (e) =>{\n    this.props.handleIssueOptionClick(e.currentTarget.id);\n  }\n  \n  render(){\n    let issueList = [];\n    let titleCase = \"\";\n    \n    if(this.props.applianceSelected === \"water_heater\"){\n      titleCase = \"Water Heater \";\n      for(let i = 0; i < this.state.waterHeaterIssues.length; i++){\n        issueList.push(\n          <IssueItem \n            issue = {this.state.waterHeaterIssues[i]}\n            itemOnClick = {this.issueItemClick}\n          />\n        );\n      }\n    }else if(this.props.applianceSelected === \"not_listed\"){\n      \n      titleCase = \"Appliance \";\n      for(let i =0; i < this.state.notlistedIssues.length; i++){\n        issueList.push(\n          <IssueItem \n            issue = {this.state.notlistedIssues[i]}\n            itemOnClick = {this.issueItemClick}\n          />\n        );  \n      }\n    }else{\n      let type = this.props.applianceSelected + \"Issues\";\n      \n      titleCase = ((this.props.applianceSelected).charAt(0)).toUpperCase() + \n        this.props.applianceSelected.slice(1) + \" \";\n      \n      for(let i =0; i < this.state[type].length; i++){\n        issueList.push(\n          <IssueItem \n            issue = {this.state[type][i]}\n            itemOnClick = {this.issueItemClick}\n          />\n        );  \n      }\n    }\n    \n  \n    return(\n      <ModalBody>\n        <div className={classes.FlexCenter}>\n          <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropDown} size=\"block\" >\n            <DropdownToggle caret>\n              {titleCase}\n               Issues\n            </DropdownToggle>\n            <DropdownMenu>\n              {issueList}\n            </DropdownMenu>\n          </ButtonDropdown>\n        </div>\n      </ModalBody>   \n    );\n  }\n  \n}\n\nexport default IssueDropDown;"]},"metadata":{},"sourceType":"module"}