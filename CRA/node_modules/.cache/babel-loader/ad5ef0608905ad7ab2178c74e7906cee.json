{"ast":null,"code":"var _jsxFileName = \"/home/moarwaffe/Dev/thoseguysappliancerepair/ThoseGuysApplianceRepair/src/components/UsedAppliances/UsedApplianceModal/ContactInfoForm/ContactInfoForm.js\";\nimport React, { Component } from 'react';\nimport classes from './ContactInfoForm.module.css';\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass ContactInfoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fName: \"\",\n      lName: \"\",\n      phoneNumber: \"\",\n      inputAddress: \"\",\n      inputAddress2: \"\",\n      inputCity: \"\",\n      inputZip: \"\",\n      shouldBtnMount: false\n    };\n\n    this.handleFormChange = e => {\n      const alphaOnly = /^[a-zA-Z]+$/;\n      const numbersOnly = /^\\d+$/;\n      const phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\n      switch (e.target.id) {\n        case \"fName\":\n          if (alphaOnly.test(e.target.value) || e.target.value === \"\") {\n            this.setState({\n              fName: e.target.value\n            }, function () {\n              this.checkFormValues();\n            });\n          }\n\n          break;\n\n        case \"lName\":\n          if (alphaOnly.test(e.target.value) || e.target.value === \"\") {\n            this.setState({\n              lName: e.target.value\n            }, function () {\n              this.checkFormValues();\n            });\n          }\n\n          break;\n\n        case \"phoneNumber\":\n          if (numbersOnly.test(e.target.value) || e.target.value === \"\") {\n            let newValue = e.target.value;\n\n            if (newValue.length === 10) {\n              newValue = e.target.value.replace(phoneRegex, \"($1) $2-$3\");\n            }\n\n            this.setState({\n              phoneNumber: newValue\n            }, function () {\n              this.checkFormValues();\n            });\n          } else if (this.state.phoneNumber.length === 14 && e.target.value.length === 13) {\n            this.setState({\n              phoneNumber: \"\"\n            });\n          }\n\n          break;\n\n        case \"inputAddress\":\n          this.setState({\n            inputAddress: e.target.value\n          }, function () {\n            this.checkFormValues();\n          });\n          break;\n\n        case \"inputAddress2\":\n          this.setState({\n            inputAddress2: e.target.value\n          }, function () {\n            this.checkFormValues();\n          });\n          break;\n\n        case \"inputCity\":\n          if (alphaOnly.test(e.target.value) || e.target.value === \"\") {\n            this.setState({\n              inputCity: e.target.value\n            }, function () {\n              this.checkFormValues();\n            });\n          }\n\n          break;\n\n        case \"inputZip\":\n          if (numbersOnly.test(e.target.value) || e.target.value === \"\") {\n            if (e.target.value.length < 6) {\n              this.setState({\n                inputZip: e.target.value\n              }, function () {\n                this.checkFormValues();\n              });\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.checkFormValues = () => {\n      if (this.state.fName !== \"\" && this.state.lName !== \"\" && this.state.phoneNumber !== \"\" && this.state.inputAddress !== \"\" && this.state.inputCity !== \"\" && this.state.inputZip !== \"\") {\n        if (this.state.phoneNumber.length === 14 && this.state.inputZip.length === 5) {\n          this.setState({\n            shouldBtnMount: true\n          });\n        } else {\n          this.setState({\n            shouldBtnMount: false\n          });\n        }\n      } else {\n        this.setState({\n          shouldBtnMount: false\n        });\n      }\n    };\n\n    this.submitForm = e => {\n      e.preventDefault();\n    };\n\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.checkFormValues = this.checkFormValues.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Form, {\n      autoComplete: \"on\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Row, {\n      form: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"fName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Input, {\n      required: true,\n      onChange: this.handleFormChange,\n      value: this.state.fName,\n      type: \"text\",\n      name: \"firstName\",\n      id: \"fName\",\n      placeholder: \"John\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"lName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Input, {\n      required: true,\n      onChange: this.handleFormChange,\n      value: this.state.lName,\n      type: \"text\",\n      name: \"LastName\",\n      id: \"lName\",\n      placeholder: \"Smith\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"phoneNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(Input, {\n      required: true,\n      pattern: \"([0-9]{3})[0-9]{3}-[0-9]{4}\",\n      inputMode: \"numeric\",\n      onChange: this.handleFormChange,\n      value: this.state.phoneNumber,\n      type: \"text\",\n      name: \"phoneNumber\",\n      id: \"phoneNumber\",\n      placeholder: \"(575) 555-5555\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"inputAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Input, {\n      required: true,\n      onChange: this.handleFormChange,\n      value: this.state.inputAddress,\n      type: \"text\",\n      name: \"address\",\n      id: \"inputAddress\",\n      placeholder: \"1234 Main St\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"inputAddress2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Address 2\"), React.createElement(Input, {\n      onChange: this.handleFormChange,\n      value: this.state.inputAddress2,\n      type: \"text\",\n      name: \"address2\",\n      id: \"inputAddress2\",\n      placeholder: \"1234 Main St\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(Row, {\n      form: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"inputCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"City\"), React.createElement(Input, {\n      required: true,\n      onChange: this.handleFormChange,\n      value: this.state.inputCity,\n      type: \"text\",\n      name: \"city\",\n      id: \"inputCity\",\n      placeholder: \"Clovis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: {\n        size: '2',\n        offset: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"inputZip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Zip\"), React.createElement(Input, {\n      required: true,\n      onChange: this.handleFormChange,\n      value: this.state.inputZip,\n      inputMode: \"numeric\",\n      type: \"text\",\n      name: \"zip\",\n      id: \"inputZip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: classes.FlexEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.shouldBtnMount ? React.createElement(Button, {\n      onClick: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \" Send Message \") : React.createElement(React.Fragment, null))));\n  }\n\n}\n\nexport default ContactInfoForm;","map":{"version":3,"sources":["/home/moarwaffe/Dev/thoseguysappliancerepair/ThoseGuysApplianceRepair/src/components/UsedAppliances/UsedApplianceModal/ContactInfoForm/ContactInfoForm.js"],"names":["React","Component","classes","Container","Col","Row","Button","Form","FormGroup","Label","Input","ContactInfoForm","constructor","props","state","fName","lName","phoneNumber","inputAddress","inputAddress2","inputCity","inputZip","shouldBtnMount","handleFormChange","e","alphaOnly","numbersOnly","phoneRegex","target","id","test","value","setState","checkFormValues","newValue","length","replace","submitForm","preventDefault","bind","render","size","offset","FlexEnd"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './ContactInfoForm.module.css';\nimport {Container, Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n\nclass ContactInfoForm extends Component {\n  constructor(props) {\n        super(props);\n    \n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.checkFormValues = this.checkFormValues.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n  \n  state = {\n  \tfName : \"\",\n\tlName : \"\",\n\tphoneNumber : \"\",\n\tinputAddress : \"\",\n\tinputAddress2 : \"\",\n\tinputCity : \"\",\n\tinputZip : \"\",\n\tshouldBtnMount: false\n  };\n  \n  \n  handleFormChange = (e) =>{\n  \tconst alphaOnly = /^[a-zA-Z]+$/;\n  \tconst numbersOnly = /^\\d+$/;\n  \tconst phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n  \t\n  \t\n  \tswitch(e.target.id){\n  \t\tcase \"fName\":\n  \t\t\tif(alphaOnly.test(e.target.value) || e.target.value === \"\"){\n  \t\t\t\tthis.setState({\n  \t\t\t\t\tfName: e.target.value\n  \t\t\t\t}, function() {\n\t\t\t\t\tthis.checkFormValues();\n\t\t\t\t});\n  \t\t\t}\n  \t\t\tbreak;\n\t\tcase \"lName\":\n\t\t\tif(alphaOnly.test(e.target.value) || e.target.value === \"\"){\n  \t\t\t\tthis.setState({\n  \t\t\t\t\tlName: e.target.value\n  \t\t\t\t}, function() {\n\t\t\t\t\tthis.checkFormValues();\n\t\t\t\t});\n  \t\t\t}\n\t\t\tbreak;\n\t\tcase \"phoneNumber\":\n\t\t\tif(numbersOnly.test(e.target.value) || e.target.value === \"\"){\n\t\t\t\tlet newValue = e.target.value\n\t\t\t\t\n\t\t\t\tif(newValue.length === 10){\n\t\t\t\t\tnewValue = e.target.value.replace(phoneRegex, \"($1) $2-$3\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tphoneNumber: newValue\n\t\t\t\t}, function() {\n\t\t\t\t\tthis.checkFormValues();\n\t\t\t\t});\n\t\t\t}else if (this.state.phoneNumber.length === 14 && e.target.value.length === 13){\n\t\t\t\tthis.setState({\n\t\t\t\t\tphoneNumber: \"\"\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tbreak;\n\t\tcase \"inputAddress\":\n\t\t\tthis.setState({\n\t\t\t\tinputAddress: e.target.value\n\t\t\t}, function() {\n\t\t\t\t\tthis.checkFormValues();\n\t\t\t});\n\t\t\tbreak;\n\t\tcase \"inputAddress2\":\n\t\t\tthis.setState({\n\t\t\t\tinputAddress2: e.target.value\n\t\t\t}, function() {\n\t\t\t\t\tthis.checkFormValues();\n\t\t\t});\n\t\t\tbreak;\n\t\tcase \"inputCity\":\n\t\t\tif(alphaOnly.test(e.target.value) || e.target.value === \"\"){\n\t\t\t\tthis.setState({\n\t\t\t\t\tinputCity: e.target.value\n\t\t\t\t}, function() {\n\t\t\t\t\tthis.checkFormValues();\n\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"inputZip\":\n\t\t\tif(numbersOnly.test(e.target.value) || e.target.value === \"\"){\n\t\t\t\tif(e.target.value.length <  6){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tinputZip: e.target.value\n\t\t\t\t\t}, function() {\n\t\t\t\t\t\tthis.checkFormValues();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n  \t\tdefault:\t\n  \t\t\tbreak;\n  \t}\n  }\n  \n  checkFormValues = () =>{\n  \tif(this.state.fName !== \"\" && this.state.lName !== \"\" && this.state.phoneNumber !== \"\"\n  \t\t&& this.state.inputAddress !== \"\"  && this.state.inputCity !== \"\" && this.state.inputZip !== \"\"\n  \t){\n  \t\tif(this.state.phoneNumber.length === 14 && this.state.inputZip.length ===5){\n  \t\t\tthis.setState({shouldBtnMount: true});\n  \t\t}else{\n  \t\t\tthis.setState({shouldBtnMount: false});\n  \t\t}\n  \t}else{\n  \t\tthis.setState({shouldBtnMount: false});\n  \t}\n  }\n  \n  submitForm = (e) =>{\n  \te.preventDefault();\n  } \n  \n  render(){\n    return(\n    \t<Container>\n    \t\t<Form autoComplete=\"on\">\n\t\t      <Row form>\n\t\t        <Col md={6}>\n\t\t          <FormGroup>\n\t\t            <Label for=\"fName\">First Name</Label>\n\t\t            <Input required onChange={this.handleFormChange} value={this.state.fName}\n\t\t            \ttype=\"text\" name=\"firstName\" id=\"fName\" placeholder=\"John\" />\n\t\t          </FormGroup>\n\t\t        </Col>\n\t\t        <Col md={6}>\n\t\t          <FormGroup>\n\t\t            <Label for=\"lName\">Last Name</Label>\n\t\t            <Input required onChange={this.handleFormChange} value={this.state.lName}\n\t\t            \ttype=\"text\" name=\"LastName\" id=\"lName\" placeholder=\"Smith\" />\n\t\t          </FormGroup>\n\t\t        </Col>\n\t\t      </Row>\n\t\t      <FormGroup>\n\t\t        <Label for=\"phoneNumber\">Phone Number</Label>\n\t\t        <Input required pattern=\"([0-9]{3})[0-9]{3}-[0-9]{4}\"\n\t\t        \tinputMode=\"numeric\"\n\t\t        \tonChange={this.handleFormChange} value={this.state.phoneNumber}\n\t\t        \ttype=\"text\" name=\"phoneNumber\" id=\"phoneNumber\" placeholder=\"(575) 555-5555\"/>\n\t\t      </FormGroup>\n\t\t      <FormGroup>\n\t\t        <Label for=\"inputAddress\">Address</Label>\n\t\t        <Input required onChange={this.handleFormChange} value={this.state.inputAddress}\n\t\t        \ttype=\"text\" name=\"address\" id=\"inputAddress\" placeholder=\"1234 Main St\"/>\n\t\t      </FormGroup>\n\t\t      <FormGroup>\n\t\t        <Label for=\"inputAddress2\">Address 2</Label>\n\t\t        <Input onChange={this.handleFormChange} value={this.state.inputAddress2}\n\t\t        \ttype=\"text\" name=\"address2\" id=\"inputAddress2\" placeholder=\"1234 Main St\"/>\n\t\t      </FormGroup>\n\t\t      <Row form>\n\t\t        <Col md={6}>\n\t\t          <FormGroup>\n\t\t            <Label for=\"inputCity\">City</Label>\n\t\t            <Input required onChange={this.handleFormChange} value={this.state.inputCity} \n\t\t            \ttype=\"text\" name=\"city\" id=\"inputCity\" placeholder=\"Clovis\" />\n\t\t          </FormGroup>\n\t\t        </Col>\n\t\t        \n\t\t        <Col md={{ size: '2', offset: 4 }}>\n\t\t          <FormGroup>\n\t\t            <Label for=\"inputZip\">Zip</Label>\n\t\t            <Input required onChange={this.handleFormChange} value={this.state.inputZip} \n\t\t            \tinputMode=\"numeric\"\n\t\t            \ttype=\"text\" name=\"zip\" id=\"inputZip\"/>\n\t\t          </FormGroup>  \n\t\t        </Col>\n\t\t      </Row>\n\t\t      \n\t\t      \n\t\t      <div className={classes.FlexEnd}>\n\t    \t\t{this.state.shouldBtnMount ? \n\t      \t\t\t<Button\tonClick={this.submitForm}> Send Message </Button>\n\t      \t\t\t:\n\t      \t\t\t<></>\n\t    \t\t}\n\t\t      </div>\n\t\t      \n\t\t      \n\t\t    </Form>\n    \t</Container>\n    );\n  }\n  \n}\n\nexport default ContactInfoForm;"]},"metadata":{},"sourceType":"module"}